drop table if exists tilepile;
CREATE TABLE tilepile (
	id         int,
	notes      text,
	openings   int,
	doors      int default 0,
	portcullis int default 0,
	flags      int default 0,
	num        int default 0,
	bag        int default 0
);

* (1<<0)   1 It's a corridor
* (1<<1)   2 Chasm left
* (1<<2)   4 Chasm right
* (1<<3)   8 Web
* (1<<4)  16 Trap
* (1<<5)  32 Avalanche
* (1<<6)  64 Stairs
* (1<<7) 128 Dark
* (1<<8) 256 Pit
* (1<<9) 512 Rotating room

.mode csv
.import fish.csv tilepile

select * from tilepile where notes regexp '^X';
update tilepile set openings=0 where notes regexp '^X';

select * from tilepile where notes regexp '^T';
update tilepile set openings=8 where notes regexp '^T';
update tilepile set openings=1 where notes regexp 'T-left';
update tilepile set openings=4 where notes regexp 'T-right';

select * from tilepile where notes regexp '^L';
update tilepile set openings=9 where notes regexp 'L-right';
update tilepile set openings=12 where notes regexp 'L-left';

select * from tilepile where notes regexp '^I';
update tilepile set openings=5 where notes regexp '^I';

update tilepile set openings=0 where notes regexp 'chasm';
update tilepile set flags=4 where notes regexp 'chasm-right';
update tilepile set flags=2 where notes regexp 'chasm-left';

update tilepile set flags = flags | 1 where notes regexp 'corr';
update tilepile set flags = flags | (1<<3) where notes regexp 'web';
update tilepile set flags = flags | (1<<4) where notes regexp 'trap';
update tilepile set flags = flags | (1<<5) where notes regexp 'aval';
update tilepile set flags = flags | (1<<6) where notes regexp 'stai';
update tilepile set flags = flags | (1<<7) where notes regexp 'dark';

update tilepile set openings=13 where notes regexp 'dead';
update tilepile set openings=13 where notes regexp 'rotate';
update tilepile set openings=5 where notes regexp 'plank';
update tilepile set flags = flags | (1<<8) where notes regexp 'pit';

update tilepile set doors=8 where notes regexp 'doorAhead';
update tilepile set doors=13 where notes regexp 'door3';
update tilepile set doors=4 where id=29;

update tilepile set portcullis=2 where notes regexp 'port';

update tilepile set flags = flags | (1<<9) where notes regexp 'rotat';





sqlite> .mode csv
sqlite> .output test.csv
sqlite> select * from tbl1;
sqlite> .output stdout










* 10x13 grid board
* square room (N, E, S, W)
*    N = 0111
*    E = 1011
*    S = 1101
*    W = 1110
*
* 8421
* door (N, E, S, W)
*    N = 1000
*    E = 0100
*    S = 0010
*    W = 0001

drop table if exists board;
create table board (
	x           int,
	y           int,
	openings    int,
	doors       int default 0,
	portcullis  int default 0,
	is_corridor int default 0,
	j           json default '{}'
);

create table characters (
	id    INTEGER PRIMARY KEY AUTOINCREMENT,
	name  text,
	class text,
	x     int,
	y     int,
	flags int default 0 not null,
	j     json
);
********** flags
01 active; in focus
10 deleted


(~(a&b))&(a|b)   <--- substitute for XOR
select (~(flags&2))&(flags|2) from characters;
create view v_chars as
   select * from characters where ((~(flags&2))&(flags|2))&2;

update characters set flags=(~(flags&2))&(flags|2) where id=1;
update characters set flags=4 where id=1;

insert into characters (name) values ("larry");

update characters
set j = json('{}')
where name = 'Larry';

delete from board;
insert into board (x, y, openings) values (0, 0, 9);  # 1001
insert into board (x, y, openings) values (9, 0, 12);  # 1100
insert into board (x, y, openings) values (9, 12, 6);  # 0110
insert into board (x, y, openings) values (0, 12, 3);  # 0011
insert into board (x, y, openings) values (4, 6, 0);
insert into board (x, y, openings) values (5, 6, 0);




update characters
set j = json_set(j, '$.attribute.MUS', 10)
where name = 'Larry';




******************
.tables
.schema <table>

