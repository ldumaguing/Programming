#include <iostream>

// Characters are 8x12 -- characters start at (x:1,y:1) and are 5x7 in size, so
// it is possible to not display the full area. This display mode actually treats
// them as 6x10, starting at (x:1,y:0)
static const uint8_t font_data[][8] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0020 (space)
	{ 0x18, 0x3c, 0x3c, 0x18, 0x18, 0x00, 0x18, 0x00 },   // U+0021 (!)
	{ 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0022 (")
	{ 0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00 },   // U+0023 (#)
	{ 0x30, 0x7c, 0xc0, 0x78, 0x0c, 0xf8, 0x30, 0x00 },   // U+0024 ($)
	{ 0x00, 0xc6, 0xcc, 0x18, 0x30, 0x66, 0xc6, 0x00 },   // U+0025 (%)
	{ 0x38, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0x76, 0x00 },   // U+0026 (&)
	{ 0x60, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0027 (')
	{ 0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00 },   // U+0028 (()
	{ 0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00 },   // U+0029 ())
	{ 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00 },   // U+002A (*)
	{ 0x00, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x00, 0x00 },   // U+002B (+)
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x60 },   // U+002C (,)
	{ 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00 },   // U+002D (-)
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00 },   // U+002E (.)
	{ 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00 },   // U+002F (/)
	{ 0x7c, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0x7c, 0x00 },   // U+0030 (0)
	{ 0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xfc, 0x00 },   // U+0031 (1)
	{ 0x78, 0xcc, 0x0c, 0x38, 0x60, 0xcc, 0xfc, 0x00 },   // U+0032 (2)
	{ 0x78, 0xcc, 0x0c, 0x38, 0x0c, 0xcc, 0x78, 0x00 },   // U+0033 (3)
	{ 0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x1e, 0x00 },   // U+0034 (4)
	{ 0xfc, 0xc0, 0xf8, 0x0c, 0x0c, 0xcc, 0x78, 0x00 },   // U+0035 (5)
	{ 0x38, 0x60, 0xc0, 0xf8, 0xcc, 0xcc, 0x78, 0x00 },   // U+0036 (6)
	{ 0xfc, 0xcc, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x00 },   // U+0037 (7)
	{ 0x78, 0xcc, 0xcc, 0x78, 0xcc, 0xcc, 0x78, 0x00 },   // U+0038 (8)
	{ 0x78, 0xcc, 0xcc, 0x7c, 0x0c, 0x18, 0x70, 0x00 },   // U+0039 (9)
	{ 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00 },   // U+003A (:)
	{ 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x60 },   // U+003B (;)
	{ 0x18, 0x30, 0x60, 0xc0, 0x60, 0x30, 0x18, 0x00 },   // U+003C (<)
	{ 0x00, 0x00, 0xfc, 0x00, 0x00, 0xfc, 0x00, 0x00 },   // U+003D (=)
	{ 0x60, 0x30, 0x18, 0x0c, 0x18, 0x30, 0x60, 0x00 },   // U+003E (>)
	{ 0x78, 0xcc, 0x0c, 0x18, 0x30, 0x00, 0x30, 0x00 },   // U+003F (?)
	{ 0x7c, 0xc6, 0xde, 0xde, 0xde, 0xc0, 0x78, 0x00 },   // U+0040 (@)
	{ 0x30, 0x78, 0xcc, 0xcc, 0xfc, 0xcc, 0xcc, 0x00 },   // U+0041 (A)
	{ 0xfc, 0x66, 0x66, 0x7c, 0x66, 0x66, 0xfc, 0x00 },   // U+0042 (B)
	{ 0x3c, 0x66, 0xc0, 0xc0, 0xc0, 0x66, 0x3c, 0x00 },   // U+0043 (C)
	{ 0xf8, 0x6c, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00 },   // U+0044 (D)
	{ 0xfe, 0x62, 0x68, 0x78, 0x68, 0x62, 0xfe, 0x00 },   // U+0045 (E)
	{ 0xfe, 0x62, 0x68, 0x78, 0x68, 0x60, 0xf0, 0x00 },   // U+0046 (F)
	{ 0x3c, 0x66, 0xc0, 0xc0, 0xce, 0x66, 0x3e, 0x00 },   // U+0047 (G)
	{ 0xcc, 0xcc, 0xcc, 0xfc, 0xcc, 0xcc, 0xcc, 0x00 },   // U+0048 (H)
	{ 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 },   // U+0049 (I)
	{ 0x1e, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00 },   // U+004A (J)
	{ 0xe6, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00 },   // U+004B (K)
	{ 0xf0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00 },   // U+004C (L)
	{ 0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0x00 },   // U+004D (M)
	{ 0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00 },   // U+004E (N)
	{ 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00 },   // U+004F (O)
	{ 0xfc, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00 },   // U+0050 (P)
	{ 0x78, 0xcc, 0xcc, 0xcc, 0xdc, 0x78, 0x1c, 0x00 },   // U+0051 (Q)
	{ 0xfc, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0xe6, 0x00 },   // U+0052 (R)
	{ 0x78, 0xcc, 0xe0, 0x70, 0x1c, 0xcc, 0x78, 0x00 },   // U+0053 (S)
	{ 0xfc, 0xb4, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 },   // U+0054 (T)
	{ 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xfc, 0x00 },   // U+0055 (U)
	{ 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x00 },   // U+0056 (V)
	{ 0xc6, 0xc6, 0xc6, 0xd6, 0xfe, 0xee, 0xc6, 0x00 },   // U+0057 (W)
	{ 0xc6, 0xc6, 0x6c, 0x38, 0x38, 0x6c, 0xc6, 0x00 },   // U+0058 (X)
	{ 0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x30, 0x78, 0x00 },   // U+0059 (Y)
	{ 0xfe, 0xc6, 0x8c, 0x18, 0x32, 0x66, 0xfe, 0x00 },   // U+005A (Z)
	{ 0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00 },   // U+005B ([)
	{ 0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x02, 0x00 },   // U+005C (\)
	{ 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00 },   // U+005D (])
	{ 0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00 },   // U+005E (^)
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff },   // U+005F (_)
	{ 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0060 (`)
	{ 0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00 },   // U+0061 (a)
	{ 0xe0, 0x60, 0x60, 0x7c, 0x66, 0x66, 0xdc, 0x00 },   // U+0062 (b)
	{ 0x00, 0x00, 0x78, 0xcc, 0xc0, 0xcc, 0x78, 0x00 },   // U+0063 (c)
	{ 0x1c, 0x0c, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00 },   // U+0064 (d)
	{ 0x00, 0x00, 0x78, 0xcc, 0xfc, 0xc0, 0x78, 0x00 },   // U+0065 (e)
	{ 0x38, 0x6c, 0x60, 0xf0, 0x60, 0x60, 0xf0, 0x00 },   // U+0066 (f)
	{ 0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8 },   // U+0067 (g)
	{ 0xe0, 0x60, 0x6c, 0x76, 0x66, 0x66, 0xe6, 0x00 },   // U+0068 (h)
	{ 0x30, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 },   // U+0069 (i)
	{ 0x0c, 0x00, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78 },   // U+006A (j)
	{ 0xe0, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0xe6, 0x00 },   // U+006B (k)
	{ 0x70, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 },   // U+006C (l)
	{ 0x00, 0x00, 0xcc, 0xfe, 0xfe, 0xd6, 0xc6, 0x00 },   // U+006D (m)
	{ 0x00, 0x00, 0xf8, 0xcc, 0xcc, 0xcc, 0xcc, 0x00 },   // U+006E (n)
	{ 0x00, 0x00, 0x78, 0xcc, 0xcc, 0xcc, 0x78, 0x00 },   // U+006F (o)
	{ 0x00, 0x00, 0xdc, 0x66, 0x66, 0x7c, 0x60, 0xf0 },   // U+0070 (p)
	{ 0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0x1e },   // U+0071 (q)
	{ 0x00, 0x00, 0xdc, 0x76, 0x66, 0x60, 0xf0, 0x00 },   // U+0072 (r)
	{ 0x00, 0x00, 0x7c, 0xc0, 0x78, 0x0c, 0xf8, 0x00 },   // U+0073 (s)
	{ 0x10, 0x30, 0x7c, 0x30, 0x30, 0x34, 0x18, 0x00 },   // U+0074 (t)
	{ 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00 },   // U+0075 (u)
	{ 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x00 },   // U+0076 (v)
	{ 0x00, 0x00, 0xc6, 0xd6, 0xfe, 0xfe, 0x6c, 0x00 },   // U+0077 (w)
	{ 0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00 },   // U+0078 (x)
	{ 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8 },   // U+0079 (y)
	{ 0x00, 0x00, 0xfc, 0x98, 0x30, 0x64, 0xfc, 0x00 },   // U+007A (z)
	{ 0x1c, 0x30, 0x30, 0xe0, 0x30, 0x30, 0x1c, 0x00 },   // U+007B ({)
	{ 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00 },   // U+007C (|)
	{ 0xe0, 0x30, 0x30, 0x1c, 0x30, 0x30, 0xe0, 0x00 },   // U+007D (})
	{ 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+007E (~)
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+007F
	{ 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00 },   // U+2580 (top half)
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff },   // U+2581 (box 1/8)
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },   // U+2582 (box 2/8)
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff },   // U+2583 (box 3/8)
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff },   // U+2584 (bottom half)
	{ 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff },   // U+2585 (box 5/8)
	{ 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff },   // U+2586 (box 6/8)
	{ 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff },   // U+2587 (box 7/8)
	{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff },   // U+2588 (solid)
	{ 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe },   // U+2589 (box 7/8)
	{ 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc },   // U+258A (box 6/8)
	{ 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8 },   // U+258B (box 5/8)
	{ 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0 },   // U+258C (left half)
	{ 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0 },   // U+258D (box 3/8)
	{ 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0 },   // U+258E (box 2/8)
	{ 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 },   // U+258F (box 1/8)
	{ 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f },   // U+2590 (right half)
	{ 0xaa, 0x00, 0x55, 0x00, 0xaa, 0x00, 0x55, 0x00 },   // U+2591 (25% solid)
	{ 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55 },   // U+2592 (50% solid)
	{ 0xff, 0x55, 0xff, 0xaa, 0xff, 0x55, 0xff, 0xaa },   // U+2593 (75% solid)
	{ 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+2594 (box 1/8)
	{ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 },   // U+2595 (box 1/8)
	{ 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0 },   // U+2596 (box bottom left)
	{ 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f },   // U+2597 (box bottom right)
	{ 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00 },   // U+2598 (box top left)
	{ 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff },   // U+2599 (boxes left and bottom)
	{ 0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f },   // U+259A (boxes top-left and bottom right)
	{ 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0 },   // U+259B (boxes top and left)
	{ 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f },   // U+259C (boxes top and right)
	{ 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00 },   // U+259D (box top right)
	{ 0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0 },   // U+259E (boxes top right and bottom left)
	{ 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff },   // U+259F (boxes right and bottom)
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00 },   // U+2500 (thin horizontal)
	{ 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00 },   // U+2501 (thick horizontal)
	{ 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10 },   // U+2502 (thin vertical)
	{ 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 },   // U+2503 (thich vertical)
	{ 0x00, 0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00 },   // U+2504 (thin horizontal dashed)
	{ 0x00, 0x00, 0x00, 0xdd, 0xdd, 0x00, 0x00, 0x00 },   // U+2505 (thick horizontal dashed)
	{ 0x10, 0x00, 0x10, 0x10, 0x10, 0x00, 0x10, 0x10 },   // U+2506 (thin vertical dashed)
	{ 0x18, 0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18 },   // U+2507 (thich vertical dashed)
	{ 0x00, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00 },   // U+2508 (thin horizontal dotted)
	{ 0x00, 0x00, 0x00, 0xaa, 0xaa, 0x00, 0x00, 0x00 },   // U+2509 (thick horizontal dotted)
	{ 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10 },   // U+250A (thin vertical dotted)
	{ 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18 },   // U+250B (thich vertical dotted)
	{ 0x00, 0x00, 0x00, 0x00, 0x1f, 0x10, 0x10, 0x10 },   // U+250C (down L, right L)
	{ 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x10, 0x10, 0x10 },   // U+250D (down L, right H)
	{ 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18 },   // U+250E (down H, right L)
	{ 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18 },   // U+250F (down H, right H)
	{ 0x00, 0x00, 0x00, 0x00, 0xf0, 0x10, 0x10, 0x10 },   // U+2510 (down L, left L)
	{ 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x10, 0x10, 0x10 },   // U+2511 (down L, left H)
	{ 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18 },   // U+2512 (down H, left L)
	{ 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x18, 0x18, 0x18 },   // U+2513 (down H, left H)
	{ 0x10, 0x10, 0x10, 0x10, 0x1f, 0x00, 0x00, 0x00 },   // U+2514 (up L, right L)
	{ 0x10, 0x10, 0x10, 0x1f, 0x1f, 0x00, 0x00, 0x00 },   // U+2515 (up L, right H)
	{ 0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00 },   // U+2516 (up H, right L)
	{ 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x00, 0x00, 0x00 },   // U+2517 (up H, right H)
	{ 0x10, 0x10, 0x10, 0x10, 0xf0, 0x00, 0x00, 0x00 },   // U+2518 (up L, left L)
	{ 0x10, 0x10, 0x10, 0xf0, 0xf0, 0x00, 0x00, 0x00 },   // U+2519 (up L, left H)
	{ 0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00 },   // U+251A (up H, left L)
	{ 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x00, 0x00, 0x00 },   // U+251B (up H, left H)
	{ 0x10, 0x10, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x10 },   // U+251C (down L, right L, up L)
	{ 0x10, 0x10, 0x10, 0x1f, 0x1f, 0x10, 0x10, 0x10 },   // U+251D (down L, right H, up L)
	{ 0x18, 0x18, 0x18, 0x18, 0x1f, 0x10, 0x10, 0x10 },   // U+251E (down L, right L, up H)
	{ 0x10, 0x10, 0x10, 0x10, 0x1f, 0x18, 0x18, 0x18 },   // U+251F (down H, right L, up L)
	{ 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18 },   // U+2520 (down H, right L, up H)
	{ 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x10, 0x10, 0x10 },   // U+2521 (down L, right H, up H)
	{ 0x10, 0x10, 0x10, 0x1f, 0x1f, 0x18, 0x18, 0x18 },   // U+2522 (down H, right H, up L)
	{ 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x18, 0x18, 0x18 },   // U+2523 (down H, right H, up H)
	{ 0x10, 0x10, 0x10, 0x10, 0xf0, 0x10, 0x10, 0x10 },   // U+2524 (down L, left L, up L)
	{ 0x10, 0x10, 0x10, 0xf0, 0xf0, 0x10, 0x10, 0x10 },   // U+2525 (down L, left H, up L)
	{ 0x18, 0x18, 0x18, 0x18, 0xf8, 0x10, 0x10, 0x10 },   // U+2526 (down L, left L, up H)
	{ 0x10, 0x10, 0x10, 0x10, 0xf8, 0x18, 0x18, 0x18 },   // U+2527 (down H, left L, up L)
	{ 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18 },   // U+2528 (down H, left L, up H)
	{ 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x10, 0x10, 0x10 },   // U+2529 (down L, left H, up H)
	{ 0x10, 0x10, 0x10, 0xf8, 0xf8, 0x18, 0x18, 0x18 },   // U+252A (down H, left H, up L)
	{ 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x18, 0x18, 0x18 },   // U+252B (down H, left H, up H)
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0x10, 0x10, 0x10 },   // U+252C (down L, right L, left L)
	{ 0x00, 0x00, 0x00, 0xf0, 0xff, 0x10, 0x10, 0x10 },   // U+252D (down L, right L, left H)
	{ 0x00, 0x00, 0x00, 0x1f, 0xff, 0x10, 0x10, 0x10 },   // U+252E (down L, right H, left L)
	{ 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0x10, 0x10 },   // U+252F (down L, right H, left H)
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18 },   // U+2530 (down H, right L, left L)
	{ 0x00, 0x00, 0x00, 0xf8, 0xff, 0x18, 0x18, 0x18 },   // U+2531 (down H, right L, left H)
	{ 0x00, 0x00, 0x00, 0x1f, 0xff, 0x18, 0x18, 0x18 },   // U+2532 (down H, right H, left L)
	{ 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x18, 0x18 },   // U+2533 (down H, right H, left H)
	{ 0x10, 0x10, 0x10, 0x10, 0xff, 0x00, 0x00, 0x00 },   // U+2534 (up L, right L, left L)
	{ 0x10, 0x10, 0x10, 0xf0, 0xff, 0x00, 0x00, 0x00 },   // U+2535 (up L, right L, left H)
	{ 0x10, 0x10, 0x10, 0x1f, 0xff, 0x00, 0x00, 0x00 },   // U+2536 (up L, right H, left L)
	{ 0x10, 0x10, 0x10, 0xff, 0xff, 0x00, 0x00, 0x00 },   // U+2537 (up L, right H, left H)
	{ 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00 },   // U+2538 (up H, right L, left L)
	{ 0x18, 0x18, 0x18, 0xf8, 0xff, 0x00, 0x00, 0x00 },   // U+2539 (up H, right L, left H)
	{ 0x18, 0x18, 0x18, 0x1f, 0xff, 0x00, 0x00, 0x00 },   // U+253A (up H, right H, left L)
	{ 0x18, 0x18, 0x18, 0xff, 0xff, 0x00, 0x00, 0x00 },   // U+253B (up H, right H, left H)
	{ 0x10, 0x10, 0x10, 0x10, 0xff, 0x10, 0x10, 0x10 },   // U+253C (up L, right L, left L, down L)
	{ 0x10, 0x10, 0x10, 0xf0, 0xff, 0x10, 0x10, 0x10 },   // U+253D (up L, right L, left H, down L)
	{ 0x10, 0x10, 0x10, 0x1f, 0xff, 0x10, 0x10, 0x10 },   // U+253E (up L, right H, left L, down L)
	{ 0x10, 0x10, 0x10, 0xff, 0xff, 0x10, 0x10, 0x10 },   // U+253F (up L, right H, left H, down L)
	{ 0x18, 0x18, 0x18, 0x18, 0xff, 0x10, 0x10, 0x10 },   // U+2540 (up H, right L, left L, down L)
	{ 0x10, 0x10, 0x10, 0x10, 0xff, 0x18, 0x18, 0x18 },   // U+2541 (up L, right L, left L, down H)
	{ 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18 },   // U+2542 (up H, right L, left L, down H)
	{ 0x18, 0x18, 0x18, 0xf8, 0xff, 0x10, 0x10, 0x10 },   // U+2543 (up H, right L, left H, down L)
	{ 0x18, 0x18, 0x18, 0x1f, 0xff, 0x10, 0x10, 0x10 },   // U+2544 (up H, right H, left L, down L)
	{ 0x10, 0x10, 0x10, 0xf8, 0xff, 0x18, 0x18, 0x18 },   // U+2545 (up L, right L, left H, down H)
	{ 0x10, 0x10, 0x10, 0x1f, 0xff, 0x18, 0x18, 0x18 },   // U+2546 (up L, right H, left L, down H)
	{ 0x10, 0x10, 0x10, 0xff, 0xff, 0x18, 0x18, 0x18 },   // U+2547 (up L, right H, left H, down H)
	{ 0x18, 0x18, 0x18, 0xff, 0xff, 0x10, 0x10, 0x10 },   // U+254B (up H, right H, left H, down L)
	{ 0x18, 0x18, 0x18, 0x1f, 0xff, 0x18, 0x18, 0x18 },   // U+254A (up H, right H, left L, down H)
	{ 0x18, 0x18, 0x18, 0xf8, 0xff, 0x18, 0x18, 0x18 },   // U+2549 (up H, right L, left H, down H)
	{ 0x18, 0x18, 0x18, 0xff, 0xff, 0x18, 0x18, 0x18 },   // U+254B (up H, right H, left H, down H)
	{ 0x00, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00 },   // U+254C (thin horizontal broken)
	{ 0x00, 0x00, 0x00, 0xe7, 0xe7, 0x00, 0x00, 0x00 },   // U+254D (thick horizontal broken)
	{ 0x10, 0x10, 0x10, 0x00, 0x00, 0x10, 0x10, 0x10 },   // U+254E (thin vertical broken)
	{ 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x18 },   // U+254F (thich vertical broken)
	{ 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00 },   // U+2550 (double horizontal)
	{ 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28 },   // U+2551 (double vertical)
	{ 0x00, 0x00, 0x00, 0x1f, 0x10, 0x1f, 0x10, 0x10 },   // U+2552 (down L, right D)
	{ 0x00, 0x00, 0x00, 0x00, 0x3f, 0x28, 0x28, 0x28 },   // U+2553 (down D, right L)
	{ 0x00, 0x00, 0x00, 0x3f, 0x20, 0x2f, 0x28, 0x28 },   // U+2554 (down D, right D)
	{ 0x00, 0x00, 0x00, 0xf0, 0x10, 0xf0, 0x10, 0x10 },   // U+2555 (down L, left D)
	{ 0x00, 0x00, 0x00, 0x00, 0xf8, 0x28, 0x28, 0x28 },   // U+2556 (down D, left L)
	{ 0x00, 0x00, 0x00, 0xf8, 0x08, 0xe8, 0x28, 0x28 },   // U+2557 (down D, left D)
	{ 0x10, 0x10, 0x10, 0x1f, 0x10, 0x1f, 0x00, 0x00 },   // U+2558 (up L, right D)
	{ 0x28, 0x28, 0x28, 0x28, 0x3f, 0x00, 0x00, 0x00 },   // U+2559 (up D, right L)
	{ 0x28, 0x28, 0x28, 0x2f, 0x20, 0x3f, 0x00, 0x00 },   // U+255A (up D, right D)
	{ 0x10, 0x10, 0x10, 0xf0, 0x10, 0xf0, 0x00, 0x00 },   // U+255B (up L, left D)
	{ 0x28, 0x28, 0x28, 0x28, 0xf8, 0x00, 0x00, 0x00 },   // U+255C (up D, left L)
	{ 0x28, 0x28, 0x28, 0xe8, 0x08, 0xf8, 0x00, 0x00 },   // U+255D (up D, left D)
	{ 0x10, 0x10, 0x10, 0x1f, 0x10, 0x1f, 0x10, 0x10 },   // U+255E (up L, down L, right D)
	{ 0x28, 0x28, 0x28, 0x28, 0x2f, 0x28, 0x28, 0x28 },   // U+255F (up D, down D, right L)
	{ 0x28, 0x28, 0x28, 0x2f, 0x20, 0x2f, 0x28, 0x28 },   // U+2560 (up D, down D, right D)
	{ 0x10, 0x10, 0x10, 0xf0, 0x10, 0xf0, 0x10, 0x10 },   // U+2561 (up L, down L, left D)
	{ 0x28, 0x28, 0x28, 0x28, 0xe8, 0x28, 0x28, 0x28 },   // U+2562 (up D, down D, left L)
	{ 0x28, 0x28, 0x28, 0xe8, 0x08, 0xe8, 0x28, 0x28 },   // U+2563 (up D, down D, left D)
	{ 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x10, 0x10 },   // U+2564 (left D, right D, down L)
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0x28, 0x28, 0x28 },   // U+2565 (left L, right L, down D)
	{ 0x00, 0x00, 0x00, 0xff, 0x00, 0xef, 0x28, 0x28 },   // U+2566 (left D, right D, down D)
	{ 0x10, 0x10, 0x10, 0xff, 0x00, 0xff, 0x00, 0x00 },   // U+2567 (left D, right D, up L)
	{ 0x28, 0x28, 0x28, 0x28, 0xff, 0x00, 0x00, 0x00 },   // U+2568 (left L, right L, up D)
	{ 0x28, 0x28, 0x28, 0xef, 0x00, 0xff, 0x00, 0x00 },   // U+2569 (left D, right D, up D)
	{ 0x10, 0x10, 0x10, 0xff, 0x10, 0xff, 0x10, 0x10 },   // U+256A (left D, right D, down L, up L)
	{ 0x28, 0x28, 0x28, 0x28, 0xff, 0x28, 0x28, 0x28 },   // U+256B (left L, right L, down D, up D)
	{ 0x28, 0x28, 0x28, 0xef, 0x00, 0xef, 0x28, 0x28 },   // U+256C (left D, right D, down D, up D)
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x10, 0x10 },   // U+256D (curve down-right)
	{ 0x00, 0x00, 0x00, 0x00, 0xc0, 0x20, 0x10, 0x10 },   // U+256E (curve down-left)
	{ 0x10, 0x10, 0x10, 0x20, 0xc0, 0x00, 0x00, 0x00 },   // U+256F (curve up-left)
	{ 0x10, 0x10, 0x10, 0x08, 0x07, 0x00, 0x00, 0x00 },   // U+2570 (curve up-right)
	{ 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 },   // U+2571 (diagonal bottom-left to top-right)
	{ 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01 },   // U+2572 (diagonal bottom-right to top-left)
	{ 0x81, 0x42, 0x24, 0x18, 0x18, 0x24, 0x42, 0x81 },   // U+2573 (diagonal cross)
	{ 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00 },   // U+2574 (left L)
	{ 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 },   // U+2575 (up L)
	{ 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00 },   // U+2576 (right L)
	{ 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10 },   // U+2577 (down L)
	{ 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00 },   // U+2578 (left H)
	{ 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 },   // U+2579 (up H)
	{ 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00 },   // U+257A (right H)
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18 },   // U+257B (down H)
	{ 0x00, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x00 },   // U+257C (right H, left L)
	{ 0x10, 0x10, 0x10, 0x10, 0x18, 0x18, 0x18, 0x18 },   // U+257D (up L, down H)
	{ 0x00, 0x00, 0x00, 0xf0, 0xff, 0x00, 0x00, 0x00 },   // U+257E (right L, left H)
	{ 0x18, 0x18, 0x18, 0x18, 0x10, 0x10, 0x10, 0x10 },   // U+257F (up H, down L)
	{ 0x00, 0x00, 0x1c, 0x66, 0x60, 0x60, 0xe0, 0x00 },   // U+E541 (SGA A)
	{ 0x00, 0x00, 0x30, 0x30, 0x18, 0x0c, 0xfe, 0x00 },   // U+E542 (SGA B)
	{ 0x00, 0x00, 0x30, 0x00, 0x30, 0x0c, 0x0c, 0x00 },   // U+E543 (SGA C)
	{ 0x00, 0x00, 0xfe, 0x00, 0xc0, 0x38, 0x06, 0x00 },   // U+E544 (SGA D)
	{ 0x00, 0x00, 0xc6, 0xc0, 0xc0, 0xc0, 0xfe, 0x00 },   // U+E545 (SGA E)
	{ 0x00, 0x00, 0x00, 0xff, 0x00, 0xdb, 0x00, 0x00 },   // U+E546 (SGA F)
	{ 0x00, 0x00, 0x0c, 0x0c, 0x7c, 0x0c, 0x0c, 0x00 },   // U+E547 (SGA G)
	{ 0x00, 0x00, 0x7e, 0x00, 0x7e, 0x18, 0x18, 0x00 },   // U+E548 (SGA H)
	{ 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00 },   // U+E549 (SGA I)
	{ 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00 },   // U+E54A (SGA J)
	{ 0x00, 0x00, 0x18, 0x18, 0x5a, 0x18, 0x18, 0x00 },   // U+E54B (SGA K)
	{ 0x00, 0x00, 0xc0, 0xcc, 0xc0, 0xcc, 0xc0, 0x00 },   // U+E54C (SGA L)
	{ 0x00, 0x00, 0xc6, 0x06, 0x06, 0x06, 0xfe, 0x00 },   // U+E54D (SGA M)
	{ 0x00, 0x00, 0x66, 0x06, 0x0c, 0x18, 0x30, 0x00 },   // U+E54E (SGA N)
	{ 0x00, 0x00, 0x3c, 0x06, 0x0c, 0x18, 0x30, 0x00 },   // U+E54F (SGA O)
	{ 0x00, 0x00, 0x66, 0x06, 0x66, 0x60, 0x66, 0x00 },   // U+E550 (SGA P)
	{ 0x00, 0x00, 0x18, 0x00, 0x7e, 0x06, 0x7e, 0x00 },   // U+E551 (SGA Q)
	{ 0x00, 0x00, 0x00, 0x66, 0x00, 0x66, 0x00, 0x00 },   // U+E552 (SGA R)
	{ 0x00, 0x00, 0x30, 0x30, 0x3c, 0x0c, 0x0c, 0x00 },   // U+E553 (SGA S)
	{ 0x00, 0x00, 0x3c, 0x0c, 0x0c, 0x00, 0x0c, 0x00 },   // U+E554 (SGA T)
	{ 0x00, 0x00, 0x00, 0x6c, 0x00, 0xfe, 0x00, 0x00 },   // U+E555 (SGA U)
	{ 0x00, 0x00, 0x18, 0x18, 0x7e, 0x00, 0x7e, 0x00 },   // U+E556 (SGA V)
	{ 0x00, 0x00, 0x00, 0x18, 0x00, 0x66, 0x00, 0x00 },   // U+E557 (SGA W)
	{ 0x00, 0x00, 0x66, 0x0c, 0x18, 0x30, 0x60, 0x00 },   // U+E558 (SGA X)
	{ 0x00, 0x00, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00 },   // U+E559 (SGA Y)
	{ 0x00, 0x00, 0x18, 0x3c, 0x66, 0x66, 0x66, 0x00 }    // U+E55A (SGA Z)
};


void do_glyph(uint8_t c) {
	printf("%c", c & 0x80 ? 'X':' ');
	printf("%c", c & 0x40 ? 'X':' ');
	printf("%c", c & 0x20 ? 'X':' ');
	printf("%c", c & 0x10 ? 'X':' ');
	printf("%c", c & 0x08 ? 'X':' ');
	printf("%c", c & 0x04 ? 'X':' ');
	printf("%c", c & 0x02 ? 'X':' ');
	printf("%c", c & 0x01 ? 'X':' ');
	



	printf("\n");
}

void do_row(int r) {
	for (int i=0; i<8; i++) {
		do_glyph(font_data[r][i]);
	}
printf("........\n");
}

int main(void)
{
	int row = 0;

	do {
		do_row(row);
		row++;
	} while(row < 282);




	printf("%lu\n", sizeof(font_data));
}


